(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Wolfram 14.2' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1060,         20]
NotebookDataLength[      9785,        229]
NotebookOptionsPosition[      9550,        218]
NotebookOutlinePosition[      9956,        234]
CellTagsIndexPosition[      9913,        231]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "CCompilerDriver`"}]], "Code",
 CellChangeTimes->{{3.951190753512064*^9, 3.9511907602883644`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"de99b996-5e94-074e-92dc-e9208f877cdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compileTemplate", " ", "=", " ", 
   RowBox[{
   "StringTemplate", 
    "[", "\"\<#include <stdio.h>\n#include <stdlib.h>\n\n#include \
\\\"WolframLibrary.h\\\"\n#include \\\"WolframIOLibraryFunctions.h\\\"\n\
#include \\\"WolframNumericArrayLibrary.h\\\"\n\nDLLEXPORT mint \
WolframLibrary_getVersion() {\n    return WolframLibraryVersion;\n}\n\n\
DLLEXPORT int WolframLibrary_initialize(WolframLibraryData libData) {\n    \
return LIBRARY_NO_ERROR;\n}\n\nDLLEXPORT void \
WolframLibrary_uninitialize(WolframLibraryData libData) {\n    return;\n}\n\n\
`1`\>\"", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.951190318821598*^9, 3.9511904424376087`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b99be898-2095-be46-926d-58ed22219a26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"code", " ", "=", " ", 
    RowBox[{
    "compileTemplate", 
     "[", "\"\<\nDLLEXPORT int set(WolframLibraryData libData, mint Argc, \
MArgument *Args, MArgument Res){\n\tint x = MArgument_getInteger(Args[0]); \n\
\tint* px = malloc(sizeof(int));\n    *px = x;  \n\tMArgument_setInteger(Res, \
px);\n\treturn LIBRARY_NO_ERROR; \n}\n\nDLLEXPORT int get(WolframLibraryData \
libData, mint Argc, MArgument *Args, MArgument Res){\n\tlong ptr = \
MArgument_getInteger(Args[0]); \n\tint* x = (int*)ptr;  \n\t\
MArgument_setInteger(Res, *x);\n\treturn LIBRARY_NO_ERROR; \n}\n\nDLLEXPORT \
int clear(WolframLibraryData libData, mint Argc, MArgument *Args, MArgument \
Res){\n\tlong ptr = MArgument_getInteger(Args[0]); \n\tint* x = (int*)ptr; \n\
\tfree(x); \n\treturn LIBRARY_NO_ERROR; \n}\>\"", "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryFunctionUnload", "[", "get", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryFunctionUnload", "[", "set", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryFunctionUnload", "[", "clear", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryUnload", "[", "lib", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lib", " ", "=", " ", 
    RowBox[{"CreateLibrary", "[", 
     RowBox[{"code", ",", " ", "\"\<lib\>\""}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryLoad", "[", "lib", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"set", " ", "=", " ", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{"lib", ",", " ", "\"\<set\>\"", ",", " ", 
      RowBox[{"{", "Integer", "}"}], ",", " ", "Integer"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"get", " ", "=", " ", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{"lib", ",", " ", "\"\<get\>\"", ",", " ", 
      RowBox[{"{", "Integer", "}"}], ",", " ", "Integer"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"clear", " ", "=", " ", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{"lib", ",", " ", "\"\<clear\>\"", ",", " ", 
      RowBox[{"{", "Integer", "}"}], ",", " ", "\"\<Void\>\""}], "]"}]}], 
   ";"}], " "}]}], "Code",
 CellChangeTimes->{{3.95119043029467*^9, 3.9511905563802757`*^9}, {
   3.9511906053887997`*^9, 3.9511907402643623`*^9}, {3.951190771721525*^9, 
   3.95119077588138*^9}, {3.951190808762726*^9, 3.9511908088433323`*^9}, {
   3.9511915442033024`*^9, 3.95119157359746*^9}, {3.9511962651804905`*^9, 
   3.9511964393275337`*^9}, {3.9511964873900757`*^9, 3.951196511491127*^9}, {
   3.9511966677107162`*^9, 3.9511967373830757`*^9}, {3.951196809298252*^9, 
   3.951196832260145*^9}, {3.95119687783498*^9, 3.951196914725752*^9}, {
   3.95119698932156*^9, 3.95119701106102*^9}, {3.9511970424685516`*^9, 
   3.951197103018057*^9}, 
   3.9517144741174145`*^9},ExpressionUUID->"4e0de630-6043-6a4a-89b3-\
2c1ae80a47b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"codeTask", " ", "=", " ", 
    RowBox[{
    "compileTemplate", 
     "[", "\"\<\ntypedef struct Struct1_st {\n\tWolframLibraryData libData; \n\
}* Struct1; \n\nstatic void task1(mint taskId, void* vtarg){\n\tStruct1 \
struct1 = (Struct1)vtarg; \n\tWolframLibraryData libData = struct1->libData;\n\
\tDataStore dataStore; \n\tdataStore = \
libData->ioLibraryFunctions->createDataStore();\n\t\
libData->ioLibraryFunctions->DataStore_addInteger(dataStore, 1);\n\t\
libData->ioLibraryFunctions->raiseAsyncEvent(taskId, \\\"Event1\\\", \
dataStore); \n\t//libData->ioLibraryFunctions->deleteDataStore(dataStore);\n\t\
libData->ioLibraryFunctions->DataStore_addInteger(dataStore, 2);\n\t\
libData->ioLibraryFunctions->raiseAsyncEvent(taskId, \\\"Event2\\\", \
dataStore);\n\tlibData->ioLibraryFunctions->removeAsynchronousTask(taskId);\n\
}\n\nDLLEXPORT int startTask1(WolframLibraryData libData, mint Argc, \
MArgument *Args, MArgument Res) {\n\tStruct1 struct1 = malloc(sizeof(struct \
Struct1_st)); \n\tstruct1->libData = libData; \n\tmint taskId = \
libData->ioLibraryFunctions->createAsynchronousTaskWithThread(task1, \
struct1);\n\tMArgument_setInteger(Res, taskId);\n\treturn LIBRARY_NO_ERROR;\n\
}\n\>\"", "]"}]}], ";"}], " "}]], "Code",
 CellChangeTimes->{{3.951714513871147*^9, 3.9517145735720673`*^9}, 
   3.951714630713026*^9, {3.9517147670399113`*^9, 3.9517148041493874`*^9}, {
   3.9517148626893215`*^9, 3.951714964636265*^9}, {3.951715130477434*^9, 
   3.9517155537112503`*^9}, {3.9517156436821747`*^9, 3.951715644207218*^9}, {
   3.951715868128372*^9, 3.951715872242529*^9}, {3.951715934446102*^9, 
   3.951715934525526*^9}, {3.9517159843779144`*^9, 3.9517159849650803`*^9}, {
   3.9517164061941395`*^9, 3.9517164130936527`*^9}, {3.9517164850436764`*^9, 
   3.951716506213812*^9}, {3.951716562354561*^9, 3.9517165645449085`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ccc2cc25-59a5-074e-87ee-84701a4306a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"libTestTask", " ", "=", " ", 
    RowBox[{"CreateLibrary", "[", 
     RowBox[{"codeTask", ",", " ", "\"\<test_task\>\""}], "]"}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.9517155659637127`*^9, 3.9517155827988014`*^9}, {
  3.951715656859934*^9, 3.9517156598867455`*^9}, {3.951715881007801*^9, 
  3.951715881112156*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3fc68075-364d-ee48-b23b-f968d5631ce9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LibraryFunctionUnload", "[", "startTask1", "]"}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.95171588847847*^9, 3.9517158991373863`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"73662321-4175-f547-99e5-ed2313e8d527"],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction", "nofun", 
   "\"The function \\!\\(\\*RowBox[{\\\"startTask1\\\"}]\\) is not a valid \
LibraryFunction.\"", 2, 6, 1, 22101514901010662944, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.951716534707443*^9, 3.951716579474703*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"b66f6fc3-3f3b-6a48-8235-076d2338df1c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"startTask1", " ", "=", " ", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{"libTestTask", ",", " ", "\"\<startTask1\>\"", ",", " ", 
      RowBox[{"{", "}"}], ",", " ", "Integer"}], "]"}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.951715713465229*^9, 3.951715773032133*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4fcd12af-3271-8740-9a14-13c0818154ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"task", " ", "=", " ", 
    RowBox[{"Internal`CreateAsynchronousTask", "[", 
     RowBox[{"startTask1", ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"{", "##", "}"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.9517156942334766`*^9, 3.951715701459036*^9}, {
  3.951715786162611*^9, 3.9517158138851433`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bb68ed48-ae38-fa43-a10d-5aba6b716e46"]
},
WindowSize->{718.5, 825},
WindowMargins->{{Automatic, -5.25}, {Automatic, 0}},
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9bee753c-4c87-1945-9563-704d91bd6d17"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[1460, 33, 205, 3, 50, "Code",ExpressionUUID->"de99b996-5e94-074e-92dc-e9208f877cdb"],
Cell[1668, 38, 768, 14, 383, "Code",ExpressionUUID->"b99be898-2095-be46-926d-58ed22219a26"],
Cell[2439, 54, 3014, 68, 735, "Code",ExpressionUUID->"4e0de630-6043-6a4a-89b3-2c1ae80a47b3"],
Cell[5456, 124, 1964, 31, 489, "Code",ExpressionUUID->"ccc2cc25-59a5-074e-87ee-84701a4306a2"],
Cell[7423, 157, 452, 10, 50, "Code",ExpressionUUID->"3fc68075-364d-ee48-b23b-f968d5631ce9"],
Cell[CellGroupData[{
Cell[7900, 171, 267, 6, 50, "Code",ExpressionUUID->"73662321-4175-f547-99e5-ed2313e8d527"],
Cell[8170, 179, 420, 10, 26, "Message",ExpressionUUID->"b66f6fc3-3f3b-6a48-8235-076d2338df1c"]
}, Open  ]],
Cell[8605, 192, 415, 9, 50, "Code",ExpressionUUID->"4fcd12af-3271-8740-9a14-13c0818154ea"],
Cell[9023, 203, 523, 13, 50, "Code",ExpressionUUID->"bb68ed48-ae38-fa43-a10d-5aba6b716e46"]
}
]
*)

